<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        https://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="classpath:db.properties" />

<!--    <bean id="person" class="com.qinsheng.spring.bean.Person" >-->
<!--        <property name="id" value="1"></property>-->
<!--        <property name="age" value="122"></property>-->
<!--        <property name="gender" value="男"></property>-->
<!--        <property name="name" value="zhangsan"></property>-->

<!--        <property name="address" ref="address" />-->
<!--        <property name="books" >-->
<!--            <list>-->
<!--                <bean id="book1" class="com.qinsheng.spring.bean.Book" >-->
<!--                    <property name="author" value="wangwang" ></property>-->
<!--                    <property name="name" value="book1" ></property>-->
<!--                    <property name="price" value="122" ></property>-->
<!--                </bean>-->

<!--                <ref bean="book2"></ref>-->
<!--            </list>-->
<!--        </property>-->

<!--        <property name="hobbies">-->
<!--            <array>-->
<!--                <value>book</value>-->
<!--                <value>movie</value>-->
<!--                <value>game</value>-->
<!--            </array>-->
<!--        </property>-->

<!--        <property name="properties">-->
<!--            <props>-->
<!--                <prop key="aaa">aaa</prop>-->
<!--                <prop key="bbb">222</prop>-->
<!--            </props>-->
<!--        </property>-->

<!--        <property name="maps" ref="myMap"></property>-->
<!--    </bean>-->

<!--    <bean id="address" class="com.qinsheng.spring.bean.Address">-->
<!--        <property name="province" value="河北"></property>-->
<!--        <property name="city" value="邯郸"></property>-->
<!--        <property name="town" value="武安"></property>-->
<!--    </bean>-->
<!--    <bean id="book2" class="com.qinsheng.spring.bean.Book">-->
<!--        <property name="name" value="JVM"></property>-->
<!--        <property name="author" value="马士兵"></property>-->
<!--        <property name="price" value="1200"></property>-->
<!--    </bean>-->

<!--    <util:map id="myMap">-->
<!--        <entry key="key1" value="value1"></entry>-->
<!--        <entry key="key2" value-ref="book2"></entry>-->
<!--        <entry key="key03">-->
<!--            <bean class="com.qinsheng.spring.bean.Book">-->
<!--                <property name="name" value="西游记" ></property>-->
<!--                <property name="author" value="吴承恩" ></property>-->
<!--                <property name="price" value="100" ></property>-->
<!--            </bean>-->
<!--        </entry>-->
<!--    </util:map>-->

<!--    <bean id="person6" class="com.qinsheng.spring.bean.Person" p:id="2" p:name="wangwu" p:gender="女" p:age="12" />-->

<!--&lt;!&ndash;    <bean id="myBeanPostProcessor" class="com.qinsheng.spring.processor.MyBeanPostProcessor" ></bean>&ndash;&gt;-->

<!--    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">-->
<!--        <property name="username" value="${username}"></property>-->
<!--        <property name="password" value="${password}"></property>-->
<!--        <property name="url" value="${url}"></property>-->
<!--        <property name="driverClassName" value="${driverClassName}"></property>-->
<!--    </bean>-->

    <context:component-scan base-package="com.qinsheng">
        <!--
        当定义好基础扫描的包之后，可以排除包中的某些类，使用如下的方式:
        type:表示指定过滤的规则
            annotation：按照注解进行排除，标注了指定注解的组件不要,expression表示要过滤的注解
            assignable：指定排除某个具体的类，按照类排除，expression表示不注册的具体类名
            aspectj：后面讲aop的时候说明要使用的aspectj表达式，不用
            custom：定义一个typeFilter,自己写代码决定哪些类被过滤掉，不用
            regex：使用正则表达式过滤，不用
        -->
        <!--        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->

        <!--指定只扫描哪些组件，默认情况下是全部扫描的，所以此时要配置的话需要在component-scan标签中添加 use-default-filters="false"-->
    </context:component-scan>

    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
    
</beans>